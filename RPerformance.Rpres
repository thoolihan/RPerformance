R Performance (it's not R, it's you)
========================================================
author: Tim Hoolihan
date: Presented January 2018 at Codemash
autosize: true

Bio
========================================================

![Bio Pic](images/family.jpg)
![Bio Pic](images/stadium.jpg)
![Bio Pic](images/running.jpg)

- Tim Hoolihan
- Live in Northeast Ohio (Akron / Cleveland)
- Senior Director of Data Science at DialogTech
- Organizer of the Cleveland R User Group: [meetup.com/Cleveland-UseR-Group](https://www.meetup.com/Cleveland-UseR-Group/)
- Created a series of R machine learning videos: [packtpub.com/all?search=Hoolihan](https://www.packtpub.com/all?search=Hoolihan)


========================================================

<img src="images/dt-logo.png" style="background-color:transparent; border:0px; box-shadow:none;"></img>

# "DialogTech provides actionable marketing analytics for businesses that value inbound phone calls." - dialogtech.com

* Offices in Chicago, IL and Cleveland, OH
* [dialogtech.com/careers](https://www.dialogtech.com/careers)

Sponsors
========================================================
*placeholder*

Codemash
========================================================
Thanks to all Codemash & Kalahari staff and volunteers, this is my favorite tech event of the year

#### 2018 Highlights / Recommendations...
* foo
* bar
* baz

Hello Benchmarking
========================================================
[RBenchmark Package](https://cran.r-project.org/web/packages/rbenchmark/index.html)
```{r}
library(rbenchmark)

1:5
(1:5)^2
benchmark((1:100)^2)
benchmark((1:100)^2, replications = 5000)
```

Benchmarking More Complex
========================================================
First we define a function that returns the absolute difference between a circle with the radius and a given area
```{r}
circle_area_difference <- function(radius, area = 1) {
  return(abs(area - pi * radius ^ 2))
}
circle_area_difference(1, 3.14)
```

Now, we optimize it for a minimum, i.e. search for the radius that gives us closest to the target area
```{r}
optimize(circle_area_difference, lower = 0, upper = 1)
```
`$minimum` is the best value it found, and `$objective` is the output of the function at the value

Benchmarking More Complex (cont.)
========================================================
Benchmark multiple approaches
```{r}
library(rbenchmark)

benchmark(optimize(circle_area_difference, lower = 0, upper = 1),
          replications = 500,
          columns = c('replications', 'elapsed', 'user.self', 'sys.self'),
          order = 'elapsed')

library(optimx)
benchmark(optimx(par = c(.5), fn = circle_area_difference, lower = 0, upper = 1),
          replications = 500,
          columns = c('replications', 'elapsed', 'user.self', 'sys.self'),
          order = 'elapsed')
```

Vectorize Operations
========================================================
```{r}
library(rbenchmark)

large_vec = 1:10000

get_roots <- function(nums) {
  tmp <- c()
  for(n in nums) {
    tmp <- c(tmp, sqrt(n))
  }
  return(tmp)
}

get_roots_vec <- function(nums) { return(sqrt(nums))}

benchmark(get_roots(large_vec),
          columns = c('replications', 'elapsed', 'user.self', 'sys.self'),
          order = 'elapsed')

benchmark(get_roots_vec(large_vec),
          columns = c('replications', 'elapsed', 'user.self', 'sys.self'),
          order = 'elapsed')
```

Questions? / Contact
========================================================
- Twitter: [@thoolihan](https://twitter.com/thoolihan)
- Slides: [github.com/thoolihan/RPerformance](https://github.com/thoolihan/RPerformance)
- Blog: [hoolihan.net/blog-tim](https://hoolihan.net/blog-tim)
- Videos: [youtube.com/c/TimHoolihan](https://www.youtube.com/c/TimHoolihan)
- ML Videos: [packtpub.com/all?search=Hoolihan](https://www.packtpub.com/all?search=Hoolihan)
- Cleveland R User Group: [meetup.com/Cleveland-UseR-Group/](https://www.meetup.com/Cleveland-UseR-Group/)
- Cleveland R User Group Talks: [youtube.com/channel/UC7C4YZ-9itQW7Nl4RVKDflg](https://www.youtube.com/channel/UC7C4YZ-9itQW7Nl4RVKDflg)

# Thank you for coming today, make the most of Your Codemash
